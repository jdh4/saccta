import subprocess
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt

# data generated by https://github.com/jdh4/saccta/blob/main/stellar_amd_history.sh
# sacct -M stellar -a -X -n -S 2024-01-01T00:00:00 -E 2024-12-31T23:59:59 -r cimes -o user | sort | uniq | wc -l
# sacct -M stellar -a -X -n -S 2024-01-01T00:00:00 -E 2024-12-31T23:59:59 -o cputimeraw -r cimes | awk '{sum += $1} END {print int(sum/3600)}'

cluster = "stellar_amd"
years = range(2021, 2025)
users = [16, 35, 45, 60]
cpu_hours = [36964540, 105417786, 58018452, 64509252]

nrows = 1
ncols = 3

opts = {"mfc":"tab:blue",
        "mec":"tab:blue",
        "linestyle":'dashed',
        "linewidth":1,
        "markersize":6,
        "color":'lightgrey'}

fig = plt.figure(figsize=(12, 2.5))
plt.subplot(nrows, ncols, 1)
plt.plot(years, users, 'o', **opts)
plt.xlabel("Year")
plt.ylabel("Number of Users")
plt.xticks(years, map(str, years))

plt.subplot(nrows, ncols, 2)
plt.plot(years, [x/1e6 for x in cpu_hours], 'o', **opts)
plt.xlabel("Year")
plt.ylabel("CPU-Hours / $10^6$")
plt.xticks(years, map(str, years))

plt.subplot(nrows, ncols, 3)
avail = 365 * 24 * (128 * 187)
plt.plot(years, [x/avail for x in cpu_hours], 'o', **opts)
plt.ylim(0, 1)
plt.xlabel("Year")
plt.ylabel("CPU-Hours / CPU-Hours Avail.")
plt.xticks(years, map(str, years))

plt.tight_layout()
plt.savefig(f"{cluster}_history.png", dpi=200)
plt.savefig(f"{cluster}_history.pdf")
